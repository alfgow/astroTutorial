---
import BlogPost from 'src/components/BlogPost.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
    const allPosts = await Astro.glob('../posts/*.md');
    const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];
    return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
        return {
            params: { tag },
            props: { posts: filteredPosts },
        }
    });
}

interface Post { 
    frontmatter: { 
        tags?: string[],
        title: string 
    },
    url: string,
}

const { tag } = Astro.params;
const { posts }: { posts: Post[] } = Astro.props || { posts: []}
const filteredPosts = Array.isArray(posts) ? posts.filter(post => post.frontmatter.tags?.includes(tag)) : [];
---
<BaseLayout pageTitle={tag}>
  <p>Entradas etiquetadas con {tag}</p>
  <ul>
    {filteredPosts.map(post => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</BaseLayout>